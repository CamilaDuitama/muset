#!/bin/bash

#Auth: Francesco Andreace 26.06.2024, Camila Duitama


# !!! WARNING !!!
# GGCAT AND KMAT_TOOLS MUST BE INSTALLED AND IN YOUR PATH.
set -e

MUSET_VERSION="0.2"

SCRIPT_DIR=$(dirname $(readlink -f $0))
# Ensure to use the kmat_tools executable within the same folder of this script
export PATH="${SCRIPT_DIR}${PATH:+:${PATH}}"

SCRIPT_NAME=$(basename $0)
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
LOG_FILE="./${SCRIPT_NAME}_${TIMESTAMP}.log"

# Define the log function
log() {
    local message="$1"
    local timestamp=$(date +"[%Y-%m-%d %H:%M:%S.%3N]")
    echo "${timestamp} ${message}" | tee -a "${LOG_FILE}"
}

# Define the log_and_run function
log_and_run() {
    local command="$@"
    log "[COMMAND]:: Running: $command"
    {
        "$@" 2>&1 | while IFS= read -r line
        do
            log "$line"
        done
        # Check exit status of the command
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
            log "Command failed with exit status ${PIPESTATUS[0]}"
            exit 1  # Exit the script if the command fails
        fi

    }
}

#PARAMS
# SETTING DEFAULT PARAMETERS
DEFAULT_KSIZE=31
DEFAULT_UTG_MIN_SIZE=61
DEFAULT_MINIMIZER_LENGTH=15
DEFAULT_THREADS=4
DEFAULT_MIN_KMER_ABUNDANCE=2
DEFAULT_OUTDIR=output_pa
DEFAULT_RATIO=0

k_len=$DEFAULT_KSIZE
m_size=$DEFAULT_MINIMIZER_LENGTH
thr=$DEFAULT_THREADS
utg_len=$DEFAULT_UTG_MIN_SIZE
min_kmer_abundance=$DEFAULT_MIN_KMER_ABUNDANCE
output_dir=$DEFAULT_OUTDIR
ratio=$DEFAULT_RATIO
is_custom_utg_len=false

USAGE="muset_pa v${MUSET_VERSION}

DESCRIPTION:
   muset_pa - a pipeline for building a presence-absence unitig matrix from a list of FASTA/FASTQ files.
              this pipeline has fewer parameters than muset and less filtering options as it does not build
              nor use an intermediate k-mer abundance matrix.
              If you wish a 0/1 binary matrix instead of the fraction of kmers from the sample present in the
              unitig, please use the option -r and a value x, 0 < x <=1 as minimum treshold to count a sample
              as present (1).

USAGE:
   muset_pa [options] INPUT_FILE

OPTIONS:
   -k INT     k-mer size (default: 31)
   -a INT     min abundance to keep a k-mer (default: 2)
   -l INT     minimum size of the unitigs to be retained in the final matrix (default: 2k-1)
   -r FLOAT   minimum kmer presence ratio in the unitig for 1/0 
   -o PATH    output directory (default: output)
   -m INT     minimizer length  (default: 15)
   -t INT     number of cores (default: 4)
   -s         write the unitig sequence in the first column of the output matrix instead of the identifier
   -h         show this help message and exit
   -V         show version number and exit

POSITIONAL ARGUMENTS:
    INPUT_FILE   Input file (fof) containing the description of input samples.

"

while getopts ":k:m:t:l:a:r:o:shV" opt; do
case "${opt}" in
    k) k_len=${OPTARG}
       ;;
    m) m_size=${OPTARG}
       ;;
    t) thr=${OPTARG}
       ;;
    r) ratio=${OPTARG}
       ;;
    l) utg_len=${OPTARG}
       is_custom_utg_len=true
       ;;
    a) min_kmer_abundance=${OPTARG}
       ;;
    o) output_dir=${OPTARG}
       ;;
    s) param_s="-s"
       ;;
    h) log "${USAGE}"
       exit 0
       ;;
    V) log "muset v${MUSET_VERSION}"
       exit 0
       ;;
    :) log -e "ERROR: Option -${OPTARG} requires an argument\n"
       log "Try 'muset_pa -h' for more information."
       exit 1
       ;;
    \?) log "Invalid option: -${OPTARG}"
        log "Try 'muset_pa -h' for more information."
        exit 1
        ;;
    esac
done

shift $((OPTIND-1))

# ADDING INPUT FILE AND OUTPUT FOLDER

input_file=""

# Check if user inputs the right number of arguments
if [ $# -ne 1 ]; then
   log "ERROR: Input file missing."
   log "Try 'muset -h' for more information."
   exit 1
fi

input_file=$1

if [ ! -f "$input_file" ]; then
   log "ERROR: Input file \"${input_file}\" does not exist."
   exit 1
fi


# Validate that minimizer length is smaller than k_len
if [ "$m_size" -ge "$k_len" ]; then
    log "Error: Minimizer length (-m) value ($m_size) must be smaller than k-mer size (-k) value ($k_len)."
    exit 1
fi

# Strip trailing slash from output_dir if present
if [[ "$output_dir" == */ ]]; then
    output_dir="${output_dir%/}"
fi

# set unitig length to 2k-1 if no custom value is provided
if [ "${is_custom_utg_len}" != true ]; then
    utg_len=$((2*k_len - 1))
fi


# Parameters
log "muset v${MUSET_VERSION}"
log "k-mer size (-k): ${k_len}"
log "Number of threads (-t): ${thr}"
log "Minimum unitig size (-l): ${utg_len}"
log "Minimizer length (-m): ${m_size}"
log "Minimum abundance (-a): ${min_kmer_abundance}"
log "Input file: ${input_file}"
log "Output directory (-o): ${output_dir}"

start=$(date +%s%3N)

mkdir -p "${output_dir}"
output_file=$output_dir/unitigs

log_and_run ggcat build -k $k_len --minimizer-length $m_size --colors -j $thr -l $input_file -o $output_file --min-multiplicity $min_kmer_abundance
log_and_run kmat_tools fafmt -l $utg_len -o $output_file.fa $output_file

log_and_run ggcat query --colors -k $k_len --minimizer-length $m_size -j $thr $output_file.fa $output_file.fa -o $output_file.query.jsonl 
log_and_run ggcat dump-colors $output_file.colors.dat $output_file

if [ "$ratio" -gt 0 ] 
then
log_and_run kmat_tools convert -p -m $ratio $output_file.fa $output_file.jsonl $output_file.query.jsonl -o $output_file.query.csv 
else
log_and_run kmat_tools convert $output_file.fa $output_file.jsonl $output_file.query.jsonl -o $output_file.query.csv
fi


